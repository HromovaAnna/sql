SELECT 
product_name || ', ' || product_size|| ' (' || product_qty_type || ')'
FROM product

SELECT 
    product_name || ', ' || 
    COALESCE(product_size, '') ||
	' (' || 
    COALESCE(product_qty_type, 'unit') || ')'
FROM 
    product;
	
	SELECT 
    customer_id, 
    market_date,
    ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY market_date) AS visit_number
FROM 
    customer_purchases;
	
	
	SELECT 
    customer_id, 
    market_date,
    DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY market_date DESC) AS visit_number
FROM 
    customer_purchases;




WITH RankedVisits AS (
    SELECT 
        customer_id, 
        market_date,
        DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY market_date DESC) AS visit_number
    FROM 
        customer_purchases
)
SELECT 
    customer_id, 
    market_date
FROM 
    RankedVisits
WHERE 
    visit_number = 1;
	
	
	
	SELECT 
    customer_id, 
    product_id,
    COUNT(*) OVER (PARTITION BY customer_id, product_id) AS purchase_count
FROM 
    customer_purchases;
	
	
	SELECT 
    product_name,
    SUBSTR(product_name, INSTR(product_name, '-') + 1) AS description
FROM 
    product
WHERE 
    INSTR(product_name, '-') > 0;
	
	


	
	
WITH SalesTotals AS (
    SELECT 
        market_date, 
        SUM(quantity * cost_to_customer_per_qty) AS total_sales  -- Using the correct columns for calculation
    FROM 
        customer_purchases
    GROUP BY 
        market_date
),
RankedSales AS (
    SELECT 
        market_date, 
        total_sales,
        RANK() OVER (ORDER BY total_sales DESC) AS sales_rank,
        RANK() OVER (ORDER BY total_sales ASC) AS lowest_sales_rank
    FROM 
        SalesTotals
)
SELECT 
    market_date, total_sales
FROM 
    RankedSales
WHERE 
    sales_rank = 1  -- Highest total sales
UNION
SELECT 
    market_date, total_sales
FROM 
    RankedSales
WHERE 
    lowest_sales_rank = 1;  -- Lowest total sales
